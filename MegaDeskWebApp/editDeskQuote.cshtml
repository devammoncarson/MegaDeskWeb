@using MegaDesk;
@{
    Page.Title = "Edit Desk Quote";
    Layout = "~/_Layout.cshtml";

    var db = WebMatrix.Data.Database.Open("MegaDeskDB2");

    IEnumerable<dynamic> allMaterials;
    allMaterials = db.Query("SELECT MaterialName FROM SurfaceMaterial");

    IEnumerable<dynamic> allShippingDays;
    allShippingDays = db.Query("SELECT ShippingDays FROM Shipping");

    decimal total = 0;

    Validation.RequireField("customerName", "You must enter a name");
    Validation.RequireField("width", "Width is required");
    Validation.RequireField("depth", "Depth is required");
    Validation.RequireField("numOfDrawers", "You haven't entered the number of drawers");
    Validation.RequireField("surfaceMaterial", "You haven't entered a material");
    Validation.RequireField("shipping", "You haven't entered a rush order time");

    var customerName = "";
    var width = 0;
    var depth = 0;
    var numOfDrawers = 0;
    var surfaceMaterial = 0;
    var shipping = 0;
    var surfaceMaterialName = "";
    var shippingDays = "";
    var date = System.DateTime.Now;

    if (!IsPost)
    {
        var deskQuoteData = db.QuerySingle("SELECT * FROM DeskQuote WHERE DeskQuoteId = @0", Request.QueryString["id"]);

        customerName = deskQuoteData.CustomerName;
        width = deskQuoteData.Width;
        depth = deskQuoteData.Depth;
        numOfDrawers = deskQuoteData.NumOfDrawers;
        //surfaceMaterial = deskQuoteData.MaterialId;
        shipping = deskQuoteData.ShippingId;
        surfaceMaterialName = db.QuerySingle("SELECT MaterialName FROM SurfaceMaterials WHERE MaterialId = @0", surfaceMaterial).SurfaceMaterial;
        shippingDays = db.QuerySingle("SELECT ShippingDays FROM Shipping WHERE ShippingId = @0", shipping).ShippingDays;
        date = deskQuoteData.Date;
    }

    if (IsPost && Validation.IsValid())
    {
        customerName = Request.Form["customerName"];
        width = Convert.ToInt32(Request.Form["width"]);
        depth = Convert.ToInt32(Request.Form["depth"]);
        numOfDrawers = Convert.ToInt32(Request.Form["numOfDrawers"]);
        surfaceMaterial = Convert.ToInt32(Request.Form["surfaceMaterial"]);
        shipping = Convert.ToInt32(Request.Form["shipping"]);

        Desk desk = new Desk();
        DeskQuote deskQuote = new DeskQuote();

        total = deskQuote.Total;

        var insertDeskCommand = "INSERT INTO Desk (Width, Depth, NumOfDrawers, SurfaceMaterialId) VALUES(@0, @1, @2, @3)";
        db.Execute(insertDeskCommand, width, depth, numOfDrawers, surfaceMaterial);
        var insertDeskQuoteCommand = "INSERT INTO DeskQuote (CustomerName, DeskId, ShippingId, Date, QuoteAmount) VALUES(@0, @1, @2, @3, @4)";
        var deskId = db.GetLastInsertId();
        db.Execute(insertDeskQuoteCommand, customerName, deskId, shipping, date, total);
        Response.Redirect("~/Desks");
    }


}
<h2>Edit Desk</h2>
<p><a href="~/Desks">Return to desk listing</a></p>
@Html.ValidationSummary()
<form method="post">
    <fieldset>
        <legend>Desk Information</legend>
        <p>
            <label for="customerName">Customer Name:</label>
            <input id="customerName" type="text" name="customerName" value="@customerName" />
            @Html.ValidationMessage("customerName")
        </p>

        <p>
            <label for="width">Width:(num)</label>
            <input id="width" type="text" name="width" value="@width" />
            @Html.ValidationMessage("width")
        </p>

        <p>
            <label for="depth">Depth:(num)</label>
            <input id="depth" type="text" name="depth" value="@depth" />
            @Html.ValidationMessage("depth")
        </p>

        <p>
            <label for="numOfDrawers">Number Of Drawers:(num)</label>
            <input id="numOfDrawers" type="text" name="numOfDrawers" value="@numOfDrawers" />
            @Html.ValidationMessage("numOfDrawers")
        </p>

        <p>
            <label for="surfaceMaterial">Surface Material:</label>
            <select id="surfaceMaterial" type="text" name="surfaceMaterial">
                <option selected disabled>Select a Material</option>
                @foreach (var row in allMaterials)
                {
                    <option value="@row.MaterialId">@row.MaterialName</option>
                }
            </select>
            @Html.ValidationMessage("surfaceMaterial")
        </p>

        <p>
            <label for="rushOrder">Rush Order:(num)</label>
            <select id="rushOrder" name="rushOrder">
                <option selected disabled>Select Shipping</option>
                @foreach (var row in allShippingDays)
                {
                    <option value="@row.ShippingId">@row.ShippingDays</option>
                }
            </select>
            @Html.ValidationMessage("shipping")
        </p>

        <p><input type="submit" name="buttonSubmit" value="Add Desk" /></p>

        <p><label>Quote: $</label>@total</p>
    </fieldset>
</form>
