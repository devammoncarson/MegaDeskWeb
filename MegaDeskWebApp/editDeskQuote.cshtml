@using MegaDesk;
@{
    Page.Title = "Edit Desk Quote";
    Layout = "~/_Layout.cshtml";

    var db1 = WebMatrix.Data.Database.Open("MegaDeskDB2");

    IEnumerable<dynamic> allMaterials;
    allMaterials = db1.Query("SELECT MaterialId, MaterialName FROM SurfaceMaterial");


    IEnumerable<dynamic> allShippingDays;
    allShippingDays = db1.Query("SELECT ShippingId, ShippingDays FROM Shipping");

    IEnumerable<dynamic> allCustomer;
    allCustomer = db1.Query("SELECT CustomerId, CustomerName FROM Customer");

    decimal total = 0;

    Validation.RequireField("customerName", "You must enter a name");
    Validation.RequireField("width", "Width is required");
    Validation.RequireField("depth", "Depth is required");
    Validation.RequireField("numOfDrawers", "You haven't entered the number of drawers");
    Validation.RequireField("surfaceMaterial", "You haven't entered a material");
    Validation.RequireField("shipping", "You haven't entered a shipping time");

    var customerName = "";
    var customerId = 0;
    var width = "";
    var depth = "";
    var numOfDrawers = "";
    var surfaceMaterial = "";
    var shipping = "";
    var date = "";
    var quoteAmount = "";
    int deskId = 0;
    int deskQuoteId = 0;

    if (!IsPost)
    {
        if (!Request.QueryString["Id"].IsEmpty())
        {
            deskQuoteId = Convert.ToInt32(Request.QueryString["id"]);
            var db = WebMatrix.Data.Database.Open("MegaDeskDB2");
            var dbCommand = @"SELECT dq.DeskQuoteId, dq.Date, c.customerId, dq.deskId, c.CustomerName, dq.Total, d.Width, d.Depth, d.NumOfDrawers, sf.MaterialName, s.ShippingDays
            FROM DeskQuote dq
            LEFT JOIN Customer c ON
            dq.CustomerId = c.CustomerId
            LEFT JOIN Desk d ON
            d.DeskId = dq.DeskId
            LEFT JOIN Shipping s ON
            s.ShippingId = dq.ShippingId
            LEFT JOIN SurfaceMaterial sf ON
            sf.MaterialId = dq.MaterialId
            WHERE dq.DeskQuoteId = @0";
            var row = db.QuerySingle(dbCommand, deskQuoteId);
            if (row != null)
            {
                deskQuoteId = row.DeskQuoteId;
                deskId = row.DeskId;
                customerName = row.CustomerName;
                customerId = row.CustomerId;
                width = row.Width.ToString();
                depth = row.Depth.ToString();
                numOfDrawers = row.NumOfDrawers.ToString();
                surfaceMaterial = row.MaterialName;
                shipping = row.ShippingDays.ToString();
                date = row.Date.ToString();
                quoteAmount = row.Total.ToString();
            }
            else
            {
                Validation.AddFormError("No desk was found for that Id.");
            }
        }
        else
        {
            Validation.AddFormError("No desk was found for that Id.");
        }
    }

    if (IsPost && Validation.IsValid())
    {
        var customerName2 = Request.Form["customerName"];
        var deskId2 = Request.Form["deskId"];
        var deskQuoteId2 = Request.Form["deskQuoteId"];
        var width2 = Convert.ToDecimal(Request.Form["width"]);
        var depth2 = Convert.ToDecimal(Request.Form["depth"]);
        var numOfDrawers2 = Convert.ToInt32(Request.Form["numOfDrawers"]);
        var surfaceMaterial2 = Convert.ToInt32(Request.Form["surfaceMaterial"]);
        var shipping2 = Convert.ToInt32(Request.Form["shipping"]);

        Desk desk = new Desk(width2, depth2, numOfDrawers2, surfaceMaterial2);
        DeskQuote deskQuote = new DeskQuote();

        total = deskQuote.GetQuote(desk, shipping2);

        var insertDeskCommand = "UPDATE Desk SET Depth=@0, Width=@1, NumOfDrawers=@2, MaterialId=@3 WHERE DeskId=@4";
        db1.Execute(insertDeskCommand, depth2, width2, numOfDrawers2, surfaceMaterial2, deskId2);

        var insertDeskQuoteCommand = "UPDATE DeskQuote SET CustomerId=@0, Date=@1, DeskId=@2, MaterialId=@3, ShippingId=@4, Total=@5 WHERE DeskQuoteId=@6";
        db1.Execute(insertDeskQuoteCommand, customerName2, DateTime.Now, deskId2, surfaceMaterial2, shipping2, total, deskQuoteId2);

        Response.Redirect("~/Desks");
    }


}
<h2>Edit Desk</h2>
<p><a href="~/Desks">Return to desk listing</a></p>
@Html.ValidationSummary()
<form method="post">
    <fieldset>
        <legend>Desk Information</legend>
        <p>
            <label for="customerName">Customer Name:</label>
            <select id="customerName" name="customerName"> 
                @*<option disabled selected>Select Material</option>*@
                @foreach (var m in allCustomer)
                {
                    if (m.CustomerId == customerId) {
                        <option selected title='@m.CustomerName' value="@m.CustomerId">@m.CustomerName</option>
                    } else
                    {
                        <option title='@m.CustomerName' value="@m.CustomerId">@m.CustomerName</option>
                    }
                }

            </select>
            @Html.ValidationMessage("customerName")
        </p>

        <p>
            <label for="width">Width: </label>
            <input id="width" type="text" name="width" value="@width" />
            @Html.ValidationMessage("width")
        </p>

        <p>
            <label for="depth">Depth: </label>
            <input id="depth" type="text" name="depth" value="@depth" />
            @Html.ValidationMessage("depth")
        </p>

        <p>
            <label for="numOfDrawers">Number Of Drawers:</label>
            <input id="numOfDrawers" type="text" name="numOfDrawers" value="@numOfDrawers" />
            @Html.ValidationMessage("numOfDrawers")
        </p>

        <p>
            <label for="surfaceMaterial">Surface Material:</label>
            <select id="surfaceMaterial" name="surfaceMaterial">
                <option disabled selected>Select Material</option>
                @foreach (var m in allMaterials)
                {
                    if (m.MaterialName == surfaceMaterial)
                    {
                        <option selected title='@m.MaterialName' value="@m.MaterialId">@m.MaterialName</option>
                    }
                    else
                    {
                        <option title='@m.MaterialName' value="@m.MaterialId">@m.MaterialName</option>
                    }

                }

            </select>
            @Html.ValidationMessage("surfaceMaterial")
        </p>

        <p>
            <label for="shipping">Rush Order: </label>
            <select id="shipping" name="shipping">
                <option disabled selected>Select Shipping</option>
                @foreach (var m in allShippingDays)
                {
                    if (m.ShippingDays == shipping)
                    {
                        <option selected title='@m.ShippingDays' value="@m.ShippingId">@m.ShippingDays</option>
                    }
                    else
                    {
                        <option title='@m.ShippingDays' value="@m.ShippingId">@m.ShippingDays</option>
                    }
                }
            </select>
            @Html.ValidationMessage("shipping")
        </p>

        <input type="hidden" value="@deskId" name="deskId" />
        <input type="hidden" value="@deskQuoteId" name="deskQuoteId" />

        <p><input type="submit" name="buttonSubmit" value="Edit Desk" /></p>

        <p><label>Quote: $</label>@total</p>
    </fieldset>
    <p><a href="~/Desks">Return to Desk</a></p>
</form>